if [ "x$KIBANA_HOME" = "x" ]; then
    KIBANA_HOME="<%= @install_path %>/kibana"
fi

DAEMON=$KIBANA_HOME/bin/$NAME
RUNDIR=<%= @run_path %>
PIDFILE=$RUNDIR/$NAME.pid


if [ "x$LOG" = "x" ]; then
    LOG="/var/log/kibana/kibana.log"
fi

if [ "x$DAEMON_ARGS" = "x" ]; then
    DAEMON_ARGS=""
fi

if [ "x$SCRIPTNAME" = "x" ]; then
    SCRIPTNAME="/etc/init.d/$NAME"
fi

check_status() {
        start-stop-daemon --stop --signal 0 --pidfile ${PIDFILE}
}

do_start()      {
        if check_status > /dev/null
        then
                PID=$(cat $PIDFILE)
                echo "${NAME} already running with PID ${PID}"
                exit 1
        fi

        echo -n "starting ${NAME}: "

        # Ensure that $RUNDIR exists
        [ -d $RUNDIR ] || ( mkdir -p $RUNDIR && chown kibana:kibana $RUNDIR )

        if start-stop-daemon --start --background --umask 007 --pidfile $PIDFILE --chuid kibana:kibana --exec $DAEMON -- $DAEMON_ARGS
        then
                sleep 5
                if ! [ -f $PIDFILE ]
                then
                        echo "failed to start ${NAME}"
                        exit 1
                fi
                PID=$(cat $PIDFILE)
                echo "${NAME} running with ${PID}"
        else
                echo "failed to start ${NAME}"
                exit 1
        fi
}

do_status() {
        echo -n "${NAME} status: "

        if check_status
        then
                PID=$(cat $PIDFILE)
                echo "running with ${PID}"
        else
                exit 1
        fi
}

do_stop() {
        if ! check_status > /dev/null
        then
                echo "${NAME} not running"
                exit 1
        fi

        echo -n "Stopping ${NAME}: "

        if start-stop-daemon --stop --retry forever/TERM/1 --quiet --pidfile $PIDFILE
        then
                echo "done"
                rm $PIDFILE
        else
                echo "failed"
        fi
}

case "$1" in
  start)
        do_start;;
  stop)
        do_stop
        ;;
  status)
        do_status
        ;;
  restart)
        do_stop
        do_start
        ;;
  *)
        echo "Usage: $SCRIPTNAME {start|stop|status|restart}" >&2
        exit 3
        ;;
esac
exit $?
